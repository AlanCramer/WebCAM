

Goals
  There is open source and then there is open source.
  Best documentation 
  
How does it work? 

Part A: from the user's perspective
  User draws a picture of what they want. (CAD)
    2D is easier than 3D.
    Solving the 2.5 D problem <link>
  
  Cognitive Load for the user is significant
    This is a CAD/CAM tool
    Drawing in 2D to get a (sort of) 3D object.
    Some things are never going to work due to the nature of the problem.
      2.5 D
      toolbits have a diameter
      This means cut out
      This means turn the entire hole into saw dust
  
  Describe the toolbit
    future, software suggests the toolbit.
    calculate the toolpath  
  
Part B:
  Internals
  
  Architecture
    toolpathing library
    2D visualization
    3D visualization
    <future> biarcs


About the API
  Given a canvas, generate toolpaths
  How to do this?
  Black is cut through, white is don't touch.
  So a black circle represents a hole in the material.

  So the input is a canvas. What's the output? A toolpath
  

What is a toolpath?
   An array of arrays of points.
   Why array of arrays? Because disconnected regions will be joined with a jog.

   And a point is an object with x and y { x, y }
   //todo this is a Point2, we will also need Point3
   
   so, for example, here is a toolpath of two overlapping squares 
      { // toolpath is an object
        [ // an array 
          [{1,1}, {1,3}, {3,3}, {3,1}, {1,1} ], //  of arrays of points
          [{2,2}, {2,4}, {4,4}, {4,2}, {2,2} ]
        ]
      }
   
  

How is this accomplished? 
Bitmap to vectors. This paper <ref>
That's the crux of the algorithm. See blog post.

So API is canvas and ... toolpathing parameters. Toolbit diameter and step over to start with.


 
 